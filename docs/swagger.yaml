basePath: /
definitions:
  models.Account:
    properties:
      id:
        description: Unique identifier
        type: integer
      password:
        description: Password (stored hashed, omit in response)
        type: string
      username:
        description: Username for login
        type: string
    type: object
  models.Storage:
    description: A storage volume that can optionally be attached to a VM. Includes
      attributes like size, name, container ID and optional VM binding.
    properties:
      container_id:
        description: The ID of the container that simulates the volume
        type: string
      id:
        description: The unique ID of the storage volume (autoincrement from DB)
        type: integer
      name:
        description: The name of the storage volume (autogenerated if not provided)
        type: string
      size_gb:
        description: The size of the volume in gigabytes
        type: integer
      vm_id:
        description: The ID of the attached virtual machine (nullable)
        type: integer
    type: object
  models.VM:
    properties:
      container_id:
        description: |-
          ContainerID is the Docker container ID simulating the VM.
          required: false
        type: string
      cpu:
        description: |-
          CPU represents the number of virtual CPUs allocated to the VM.
          example: 1.5
        type: number
      env:
        additionalProperties:
          type: string
        description: |-
          Env contains environment variables passed to the container.
          example: {"ENV": "dev"}
        type: object
      id:
        description: |-
          ID is the unique identifier of the virtual machine.
          required: true
        type: integer
      image:
        description: |-
          Image used to start the virtual machine (e.g., "nginx", "ubuntu").
          required: true
        type: string
      memory:
        description: |-
          Memory in megabytes allocated to the VM.
          example: 1024
        type: integer
      name:
        description: |-
          Name of the virtual machine.
          required: true
        type: string
      ports:
        description: |-
          Ports to expose on the container (e.g., [80, 443]).
          example: [80, 443]
        items:
          type: integer
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Simulated VM management API built with Go and Docker
  title: MiniCloud REST API
  version: "1.0"
paths:
  /account/all:
    get:
      description: Retrieves all registered user accounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Account'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all accounts
      tags:
      - account
  /accounts/login:
    post:
      consumes:
      - application/json
      description: Login with username and password to receive JWT token
      parameters:
      - description: Account login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: Returns JWT token and account info
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authenticate an account
      tags:
      - account
  /accounts/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Account registration payload
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new account
      tags:
      - account
  /ping:
    get:
      consumes:
      - application/json
      description: Responds with a simple ping response to verify that the public
        endpoint is reachable.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Show public API status
      tags:
      - public
  /public/ping:
    get:
      consumes:
      - application/json
      description: Responds with a simple ping response to verify that the public
        endpoint is reachable.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Show public API status
      tags:
      - public
  /storages:
    get:
      description: Retrieves a list of all storage volumes from the database.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all storages
      tags:
      - storages
    post:
      consumes:
      - application/json
      description: Creates and starts a new storage container and stores its metadata.
      parameters:
      - description: Storage object
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/models.Storage'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new storage volume
      tags:
      - storages
  /storages/{id}:
    delete:
      description: Deletes a specific storage volume using its ID.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete storage by ID
      tags:
      - storages
    get:
      description: Fetches a storage volume by its ID.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get storage by ID
      tags:
      - storages
    put:
      consumes:
      - application/json
      description: Updates the size of an existing storage volume.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated storage data
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/models.Storage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update storage size
      tags:
      - storages
  /storages/{id}/attach/{vmid}:
    post:
      description: Attaches a storage volume to a specific virtual machine.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      - description: VM ID
        in: path
        name: vmid
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Attach storage to VM
      tags:
      - storages
  /storages/{id}/detach/{vmid}:
    post:
      description: Detaches a storage volume from a specific virtual machine.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      - description: VM ID
        in: path
        name: vmid
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Detach storage from VM
      tags:
      - storages
  /vms:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all virtual machines
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all VMs
      tags:
      - vms
    post:
      consumes:
      - application/json
      description: Creates and stores metadata for a new virtual machine simulation
      parameters:
      - description: VM to create
        in: body
        name: vm
        required: true
        schema:
          $ref: '#/definitions/models.VM'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new VM
      tags:
      - vms
  /vms/{id}:
    delete:
      description: Deletes a VM and removes its associated container
      parameters:
      - description: VM ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete VM
      tags:
      - vms
    get:
      description: Retrieves a single virtual machine by its ID
      parameters:
      - description: VM ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get VM by ID
      tags:
      - vms
    put:
      consumes:
      - application/json
      description: Updates VM metadata or restarts container if necessary
      parameters:
      - description: VM ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated VM
        in: body
        name: vm
        required: true
        schema:
          $ref: '#/definitions/models.VM'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update VM
      tags:
      - vms
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
